<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/assets/" />

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<context:component-scan base-package="com.rns.tiffeat.web.controller" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean id="viewResolver1" class="org.springframework.web.servlet.view.XmlViewResolver">
        <property name="order" value="1"/>
        <property name="location" value="/WEB-INF/tiffeat-views.xml"/>
    </bean>
		
	<bean id="viewResolver2"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/tiffin" />
        <property name="username" value="root" />
        <property name="password" value="'asd'" />
        <!-- <property name="url" value="jdbc:mysql://localhost:3306/tiffeat_tiffin" />
        <property name="username" value="tiffeat_admin" />
        <property name="password" value="eat123" /> -->
        <property name="testOnReturn" value="true" />
        <property name="testOnBorrow" value="true" />
        <property name="testWhileIdle" value="true" />
        <property name="validationQuery" value="SELECT 1" />
    </bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.rns.tiffeat.web.dao.domain.Vendor</value>
				<value>com.rns.tiffeat.web.dao.domain.Meal</value>
				<value>com.rns.tiffeat.web.dao.domain.Customer</value>
				<value>com.rns.tiffeat.web.dao.domain.DailyMeal</value>
				<value>com.rns.tiffeat.web.dao.domain.Order</value>
				<value>com.rns.tiffeat.web.dao.domain.CustomerMeal</value>
				<value>com.rns.tiffeat.web.dao.domain.Transaction</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
				<!-- <prop key="hibernate.connection.release_mode">after_statement</prop> -->
				<!-- <prop key="connection.provider_class"> org.hibernate.connection.C3P0ConnectionProvider 
					</prop> -->
			</props>
		</property>
	</bean>

	<bean id="customerBo" class="com.rns.tiffeat.web.bo.impl.CustomerBoImpl">
		<property name="vendorDao" ref="vendorDao"></property>
		<property name="customerDao" ref="customerDao"></property>
		<property name="dailyMealDao" ref="dailyMealDao"></property>
		<property name="mealDao" ref="mealDao"></property>
		<property name="customerMealDao" ref="customerMealDao"></property>
		<property name="orderDao" ref="orderDao"></property>
		<property name="transactionDao" ref="transactionDao"></property>
	</bean>

	<bean id="manager" class="com.rns.tiffeat.web.bo.impl.SessionManagerImpl"
		scope="session">
		<aop:scoped-proxy proxy-target-class="false" />
	</bean>

	<bean id="vendorBo" class="com.rns.tiffeat.web.bo.impl.VendorBoImpl">
		<property name="vendorDao" ref="vendorDao"></property>
		<property name="dailyMealDao" ref="dailyMealDao"></property>
		<property name="mealDao" ref="mealDao"></property>
		<property name="customerMealDao" ref="customerMealDao"></property>
		<property name="orderDao" ref="orderDao"></property>
	</bean>


	<bean id="customerDao" class="com.rns.tiffeat.web.dao.impl.CustomerDaoImpl">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>

	<bean id="vendorDao" class="com.rns.tiffeat.web.dao.impl.VendorDaoImpl">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>

	<bean id="mealDao" class="com.rns.tiffeat.web.dao.impl.MealDaoImpl">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>

	<bean id="dailyMealDao" class="com.rns.tiffeat.web.dao.impl.DailyMealDaoImpl">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>

	<bean id="customerMealDao" class="com.rns.tiffeat.web.dao.impl.CustomerMealDaoImpl">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>

	<bean id="orderDao" class="com.rns.tiffeat.web.dao.impl.OrderDaoImpl">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>

	<bean id="transactionDao" class="com.rns.tiffeat.web.dao.impl.TransactionDaoImpl">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>
	
	<bean id="executor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="WaitForTasksToCompleteOnShutdown" value="true" />
	</bean>

	<!-- For Excel Upload -->

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- max upload size in bytes -->
		<property name="maxUploadSize" value="20971520" /> <!-- 20MB -->

		<!-- max size of file in memory (in bytes) -->
		<property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->

	</bean>

</beans>